---

- name: Test distribution
  assert:
    that: >
      ansible_os_family == "RedHat"

- name: Remove any conflicting packages
  yum:
    name: "{{ item }}"
    state: absent
  with_items: "{{ sssd_conflict_pkgs }}"

- name: Stop and disable conflicting services
  service:
    name: "{{ item }}"
    state: stopped
    enabled: no
    ignore_errors: yes
  with_items: "{{ sssd_conflict_services }}"

- name: Install sssd package for RedHat
  yum:
    name: "{{ sssd_pkg }}"
    state: present
  notify:
    - Restart sssd
  tags:
    - sssd_pkg

- name: Configure sssd service
  template:
    src: sssd.conf.j2
    dest: /etc/sssd/sssd.conf
    mode: 0600
    owner: root
    group: root
  notify:
    - Restart sssd
  tags:
    - sssd_config

- name: Make sure sssd service is running
  service:
    name: sssd
    state: started
  register: sssd_service_started
  tags:
    - sssd_config
    - sssd_pkg

- name: Make sure sssd service is enabled
  service:
    name: sssd
    enabled: yes
  tags:
    - sssd_config

- name: Set sss passwd nsswitch.conf
  lineinfile:
    dest: /etc/nsswitch.conf
    line: "passwd:        files sss"
    regexp: "^passwd:"
    state: present

- name: Set sss shadow nsswitch.conf
  lineinfile:
    dest: /etc/nsswitch.conf
    line: "shadow:        files sss"
    regexp: "^shadow:"
    state: present

- name: Set sss group nsswitch.conf
  lineinfile:
    dest: /etc/nsswitch.conf
    line: "group:        files sss"
    regexp: "^group:"
    state: present

- block:
  - name: Add pam_sss to /etc/pam.d/password-auth
    lineinfile:
      dest: /etc/pam.d/password-auth
      insertbefore: "^auth.*pam_unix.so"
      regexp: "^auth.*pam_sss.so"
      line: "auth        sufficient    pam_sss.so"

  - name: Add pam_sss to /etc/pam.d/system-auth
    lineinfile:
      dest: /etc/pam.d/system-auth
      insertbefore: "^auth.*pam_unix.so"
      regexp: "^auth.*pam_sss.so"
      line: "auth        sufficient    pam_sss.so"
  when: sssd_config_pam